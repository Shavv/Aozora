<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_blue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Everyone joins team 0 BY DEFAULT.
//You'll need to use team 1, 2, 3, 4, 5, 6, 7, 8 &amp; 9 for the acutal teams.

can_shoot = 1;
health = 100;

if(gms_team_get_current() == 1)
{
    x = 96;
    y = 512;
    sprite_index = spr_player_red;
}else{
    x = 1400;
    y = 512;
    sprite_index = spr_player_blue;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_player</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gms_statistic_set("deaths", gms_statistic_get("deaths") + 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = point_direction(x, y, mouse_x, mouse_y);

hspeed = (keyboard_check(ord('D')) - keyboard_check(ord('A'))) * 4;
vspeed = (keyboard_check(ord('S')) - keyboard_check(ord('W'))) * 4;

if(place_meeting(x + hspeed, y, obj_wall))
    hspeed = 0;

if(place_meeting(x, y + vspeed, obj_wall))
    vspeed = 0;

if(gms_team_get_current() == 1)
{
    if(place_meeting(x + hspeed, y, obj_blue_team))
        hspeed = 0;

    if(place_meeting(x, y + vspeed, obj_blue_team))
        vspeed = 0;
}

if(gms_team_get_current() == 2)
{
    if(place_meeting(x + hspeed, y, obj_red_team))
        hspeed = 0;

    if(place_meeting(x, y + vspeed, obj_red_team))
        vspeed = 0;
}

//For debugging purposes
room_caption = "FPS: "+string(fps);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_heal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(health &lt; 100)
    health += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check whether we created the instance..    ..or the instance was created by someone on the
//                                           same team.
if(other.owner != gms_self_playerid() &amp;&amp; !gms_team_player_is_friend(other.owner))
{
    //If we didn't create the instance &amp; it wasn't created by someone on the same team..
    //..we get hit.
    health -= 10;
    effect_create_above(ef_explosion, x, y, 0, c_red);

    if(health &lt; 0)//Show a message "... was killed by ..."
    {
        gms_chat(" was killed by " + gms_other_get_string(other.owner, "name"), c_red);
        gms_p2p_send(p2p_kill, other.owner);
        instance_destroy();
    }
    
    with(other)
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(can_shoot)
{
    i = instance_create(x, y, obj_bullet);
    i.speed = 16;
    i.direction = point_direction(x, y, mouse_x, mouse_y);
    can_shoot = 0;
    alarm[0] = 6;
    
    //If you want to add other variables besides x, y, speed and direction,
    //you should do it like this (the extension cannot obtain the value of a variable
    //anymore, because GM:Studio removed support for variable_* functions):
    
    //gms_instance_sync_var_add("my_variable", 100)
    //gms_instance_sync_var_add("another_variable", "string value")
    
    //ALL calls (max 13) to gms_instance_sync_var_add before the call to gms_instance_sync
    //will be included in the synchronisation. If you call gms_instance_sync_var_add
    //after gms_instance_sync, the variables will not be synced with this instance, but
    //with the next call to gms_instance_sync!
    
    //The variables set with gms_instance_sync_var_add will be synced on creation of 
    //the instance, and any variables set with gms_instance_set (only avaiable when 
    //syncing with the flag is_full), will be synced after the instance has been created, 
    //and may arrive at a later point in time.
    
    //If you try to sync more than 13 variables with gms_instance_sync_var_add,
    //the extension, depending on what version you are using, either throw an error
    //or not sync any variables after the 13th.
    
    gms_instance_sync(i, is_onetime);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//We're going to handle some P2P messages to track kills:
gms_script_set_p2p(p2p_received);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);

draw_healthbar(x-10, y - 16, x+10, y - 10, health, c_red, c_green, c_green, 0, 1, 1);

draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(0);
draw_set_font(-1);
draw_text(view_xview[0], view_yview[0], "Kills/deaths: "+string(gms_statistic_get("kills")) + " / " + string(gms_statistic_get("deaths")));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>9,15</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
