<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>COLLISION</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
delay=0
delay_timer=30
movespeed=15
side="red"
tile_x=6
tile_y=2

///check team
if tile_x&gt;4
{
 side="red"
 image_xscale=-1
}
 else
{
 side="blue"
 image_xscale=1
}

///ai movement and brain
state=0
timer=0
left=0
decision=0
right=0
up=0
down=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement
x=GRID.x+(tile_x*GRID.xx)
y=GRID.y+(tile_y*GRID.yy)
depth=-y

///keys
if up=1
{
 if tile_y&gt;0 and !instance_place(x,y-GRID.yy,COLLISION) and delay=0
 {
  tile_y-=1
  delay=delay_timer-movespeed
  blurr(80,movespeed)
 }
}

if down=1
{
 if tile_y&lt;4 and !instance_place(x,y+GRID.yy,COLLISION) and delay=0
 {
  tile_y+=1
  delay=delay_timer-movespeed
  blurr(80,movespeed)
 }
}

if left=1
{
 if side="blue"
 {
  if tile_x&gt;0 and !instance_place(x-GRID.xx,y,COLLISION) and delay=0
  {
   tile_x-=1
   delay=delay_timer-movespeed
   blurr(80,movespeed)
  }
 }
 if side="red"
 {
  if tile_x&gt;4 and !instance_place(x-GRID.xx,y,COLLISION) and delay=0
  {
   tile_x-=1
   delay=delay_timer-movespeed
   blurr(80,movespeed)
  }  
 }
}

if right=1
{
 if side="blue"
 {
  if tile_x&lt;4 and !instance_place(x+GRID.xx,y,COLLISION) and delay=0
  {
   tile_x+=1
   delay=delay_timer-movespeed
   blurr(80,movespeed)
  }
 }
 if side="red"
 {
  if tile_x&lt;8 and !instance_place(x+GRID.xx,y,COLLISION) and delay=0
  {
   tile_x+=1
   delay=delay_timer-movespeed
   blurr(80,movespeed)
  }  
 }
}

//reset delay after movement
if delay&gt;0 {delay-=1}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ai wander
if state=0
{
 if timer&lt;=0
 {
  timer=random_range(0,50)
  decision=choose(0,1,2,3,4,5,6,7,8)
  //
  if decision=0
  {
   up=1
   down=0
   left=0
   right=0
  }
  if decision=1
  {
   up=0
   down=1
   left=0
   right=0  
  }
  if decision=2
  {
   up=0
   down=0
   left=1
   right=0  
  }
  if decision=3
  {
   up=0
   down=0
   left=0
   right=1 
  }  
  if decision&gt;=4
  {
   up=0
   down=0
   left=0
   right=0 
  }
 }
  else
 {
  timer-=1
 }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,1)
draw_set_font(global.hpfont)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_white)
if hp&gt;0 {draw_text_transformed(x,y+12,hp,1,1,0)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
