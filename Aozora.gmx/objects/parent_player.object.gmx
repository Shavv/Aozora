<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_armor_knight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>COLLISION</parentName>
  <maskName>spr_grid_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
pointer_height=43
hp=1
delay=0
delay_timer=30
movespeed=15
side="blue"
state=0
walk_timer=10
char="normal"
//set team
if instance_number(parent_other_player)=1 or instance_number(parent_other_player)=3 or instance_number(parent_other_player)=5
{
 tile_x=7
 tile_y=2
}
if instance_number(parent_other_player)=0 or instance_number(parent_other_player)=2 or instance_number(parent_other_player)=4
{
 tile_x=2
 tile_y=2
}


///check team
if tile_x&gt;4
{
 side="red"
 image_xscale=-1
}
 else
{
 side="blue"
 image_xscale=1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement
x=GRID.x+(tile_x*GRID.xx)
y=GRID.y+(tile_y*GRID.yy)

///keys
if state=0 or (state=1 and alarm[0]&lt;=walk_timer)
{
 if keyboard_check(global.key_up)
 {
  if tile_y&gt;0 and !instance_place(x,y-GRID.yy,COLLISION) and delay=0
  {
   tile_y-=1
   delay=delay_timer-movespeed
   blurr(80,movespeed)
  }
 }  
 
 if keyboard_check(global.key_down)
 {
  if tile_y&lt;4 and !instance_place(x,y+GRID.yy,COLLISION) and delay=0
  {
   tile_y+=1
   delay=delay_timer-movespeed
   blurr(80,movespeed)
  }
 }  
 
 if keyboard_check(global.key_left)
 {
  if side="blue"
  {
   if tile_x&gt;0 and !instance_place(x-GRID.xx,y,COLLISION) and delay=0
   {
    tile_x-=1
    delay=delay_timer-movespeed
    blurr(80,movespeed)
   }
  }
  if side="red"
  {
   if tile_x&gt;4 and !instance_place(x-GRID.xx,y,COLLISION) and delay=0
   {
    tile_x-=1
    delay=delay_timer-movespeed
    blurr(80,movespeed)
   }  
  }
 }  

 if keyboard_check(global.key_right)
 {
  if side="blue"
  {
   if tile_x&lt;4 and !instance_place(x+GRID.xx,y,COLLISION) and delay=0
   {
    tile_x+=1
    delay=delay_timer-movespeed
    blurr(80,movespeed)
   }
  }
  if side="red"
  {
   if tile_x&lt;8 and !instance_place(x+GRID.xx,y,COLLISION) and delay=0
   {
    tile_x+=1
    delay=delay_timer-movespeed
    blurr(80,movespeed)
   }  
  }
 }
}
//reset delay after movement
if delay&gt;0 {delay-=1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variable
gms_self_set("side",side)
gms_self_set("hp",hp)
gms_self_set("pointer_height",pointer_height)
gms_self_set("char",char)

gms_self_set("x",x)
gms_self_set("y",y)
gms_self_set("sprite_index",sprite_index)
gms_self_set("image_index",image_index)
gms_self_set("image_xscale",image_xscale)
gms_self_set("image_speed",image_speed)



if hp&lt;0
{
 hp=0
}

depth=-y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,1)
draw_set_font(global.hpfont)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_white)
if hp&gt;=0 {draw_text_transformed(x,y+12,hp,1,1,0)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
